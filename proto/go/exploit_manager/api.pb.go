// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: exploit_manager/api.proto

package exploit_manager

import (
	fileserver "github.com/c4t-but-s4d/neo/proto/go/fileserver"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeamBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams map[string]string `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TeamBucket) Reset() {
	*x = TeamBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamBucket) ProtoMessage() {}

func (x *TeamBucket) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamBucket.ProtoReflect.Descriptor instead.
func (*TeamBucket) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{0}
}

func (x *TeamBucket) GetTeams() map[string]string {
	if x != nil {
		return x.Teams
	}
	return nil
}

type ExploitConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entrypoint string               `protobuf:"bytes,1,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	IsArchive  bool                 `protobuf:"varint,2,opt,name=is_archive,json=isArchive,proto3" json:"is_archive,omitempty"`
	RunEvery   *durationpb.Duration `protobuf:"bytes,3,opt,name=run_every,json=runEvery,proto3" json:"run_every,omitempty"`
	Timeout    *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ExploitConfiguration) Reset() {
	*x = ExploitConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploitConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploitConfiguration) ProtoMessage() {}

func (x *ExploitConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploitConfiguration.ProtoReflect.Descriptor instead.
func (*ExploitConfiguration) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{1}
}

func (x *ExploitConfiguration) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

func (x *ExploitConfiguration) GetIsArchive() bool {
	if x != nil {
		return x.IsArchive
	}
	return false
}

func (x *ExploitConfiguration) GetRunEvery() *durationpb.Duration {
	if x != nil {
		return x.RunEvery
	}
	return nil
}

func (x *ExploitConfiguration) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ExploitState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExploitId string                `protobuf:"bytes,1,opt,name=exploit_id,json=exploitId,proto3" json:"exploit_id,omitempty"`
	Version   int64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	File      *fileserver.FileInfo  `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Disabled  bool                  `protobuf:"varint,4,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Endless   bool                  `protobuf:"varint,5,opt,name=endless,proto3" json:"endless,omitempty"`
	Config    *ExploitConfiguration `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ExploitState) Reset() {
	*x = ExploitState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploitState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploitState) ProtoMessage() {}

func (x *ExploitState) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploitState.ProtoReflect.Descriptor instead.
func (*ExploitState) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{2}
}

func (x *ExploitState) GetExploitId() string {
	if x != nil {
		return x.ExploitId
	}
	return ""
}

func (x *ExploitState) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ExploitState) GetFile() *fileserver.FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ExploitState) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ExploitState) GetEndless() bool {
	if x != nil {
		return x.Endless
	}
	return false
}

func (x *ExploitState) GetConfig() *ExploitConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FarmUrl      string               `protobuf:"bytes,1,opt,name=farm_url,json=farmUrl,proto3" json:"farm_url,omitempty"`
	FarmPassword string               `protobuf:"bytes,2,opt,name=farm_password,json=farmPassword,proto3" json:"farm_password,omitempty"`
	FlagRegexp   string               `protobuf:"bytes,3,opt,name=flag_regexp,json=flagRegexp,proto3" json:"flag_regexp,omitempty"`
	PingEvery    *durationpb.Duration `protobuf:"bytes,4,opt,name=ping_every,json=pingEvery,proto3" json:"ping_every,omitempty"`
	SubmitEvery  *durationpb.Duration `protobuf:"bytes,5,opt,name=submit_every,json=submitEvery,proto3" json:"submit_every,omitempty"`
	Environ      []string             `protobuf:"bytes,6,rep,name=environ,proto3" json:"environ,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{3}
}

func (x *Config) GetFarmUrl() string {
	if x != nil {
		return x.FarmUrl
	}
	return ""
}

func (x *Config) GetFarmPassword() string {
	if x != nil {
		return x.FarmPassword
	}
	return ""
}

func (x *Config) GetFlagRegexp() string {
	if x != nil {
		return x.FlagRegexp
	}
	return ""
}

func (x *Config) GetPingEvery() *durationpb.Duration {
	if x != nil {
		return x.PingEvery
	}
	return nil
}

func (x *Config) GetSubmitEvery() *durationpb.Duration {
	if x != nil {
		return x.SubmitEvery
	}
	return nil
}

func (x *Config) GetEnviron() []string {
	if x != nil {
		return x.Environ
	}
	return nil
}

type ServerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ping distribution by client
	ClientTeamMap map[string]*TeamBucket `protobuf:"bytes,1,rep,name=client_team_map,json=clientTeamMap,proto3" json:"client_team_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Exploits      []*ExploitState        `protobuf:"bytes,2,rep,name=exploits,proto3" json:"exploits,omitempty"`
	Config        *Config                `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ServerState) Reset() {
	*x = ServerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerState) ProtoMessage() {}

func (x *ServerState) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerState.ProtoReflect.Descriptor instead.
func (*ServerState) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{4}
}

func (x *ServerState) GetClientTeamMap() map[string]*TeamBucket {
	if x != nil {
		return x.ClientTeamMap
	}
	return nil
}

func (x *ServerState) GetExploits() []*ExploitState {
	if x != nil {
		return x.Exploits
	}
	return nil
}

func (x *ServerState) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*PingRequest_ServerInfoRequest
	//	*PingRequest_HeartbeatRequest
	//	*PingRequest_LeaveRequest
	Payload isPingRequest_Payload `protobuf_oneof:"payload"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{5}
}

func (m *PingRequest) GetPayload() isPingRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *PingRequest) GetServerInfoRequest() *PingRequest_ServerInfo {
	if x, ok := x.GetPayload().(*PingRequest_ServerInfoRequest); ok {
		return x.ServerInfoRequest
	}
	return nil
}

func (x *PingRequest) GetHeartbeatRequest() *PingRequest_Heartbeat {
	if x, ok := x.GetPayload().(*PingRequest_HeartbeatRequest); ok {
		return x.HeartbeatRequest
	}
	return nil
}

func (x *PingRequest) GetLeaveRequest() *PingRequest_Leave {
	if x, ok := x.GetPayload().(*PingRequest_LeaveRequest); ok {
		return x.LeaveRequest
	}
	return nil
}

type isPingRequest_Payload interface {
	isPingRequest_Payload()
}

type PingRequest_ServerInfoRequest struct {
	ServerInfoRequest *PingRequest_ServerInfo `protobuf:"bytes,1,opt,name=server_info_request,json=serverInfoRequest,proto3,oneof"`
}

type PingRequest_HeartbeatRequest struct {
	HeartbeatRequest *PingRequest_Heartbeat `protobuf:"bytes,2,opt,name=heartbeat_request,json=heartbeatRequest,proto3,oneof"`
}

type PingRequest_LeaveRequest struct {
	LeaveRequest *PingRequest_Leave `protobuf:"bytes,3,opt,name=leave_request,json=leaveRequest,proto3,oneof"`
}

func (*PingRequest_ServerInfoRequest) isPingRequest_Payload() {}

func (*PingRequest_HeartbeatRequest) isPingRequest_Payload() {}

func (*PingRequest_LeaveRequest) isPingRequest_Payload() {}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ServerState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{6}
}

func (x *PingResponse) GetState() *ServerState {
	if x != nil {
		return x.State
	}
	return nil
}

type ExploitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExploitId string `protobuf:"bytes,1,opt,name=exploit_id,json=exploitId,proto3" json:"exploit_id,omitempty"`
}

func (x *ExploitRequest) Reset() {
	*x = ExploitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploitRequest) ProtoMessage() {}

func (x *ExploitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploitRequest.ProtoReflect.Descriptor instead.
func (*ExploitRequest) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{7}
}

func (x *ExploitRequest) GetExploitId() string {
	if x != nil {
		return x.ExploitId
	}
	return ""
}

type ExploitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ExploitState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ExploitResponse) Reset() {
	*x = ExploitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploitResponse) ProtoMessage() {}

func (x *ExploitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploitResponse.ProtoReflect.Descriptor instead.
func (*ExploitResponse) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{8}
}

func (x *ExploitResponse) GetState() *ExploitState {
	if x != nil {
		return x.State
	}
	return nil
}

type UpdateExploitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ExploitState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateExploitRequest) Reset() {
	*x = UpdateExploitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExploitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExploitRequest) ProtoMessage() {}

func (x *UpdateExploitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExploitRequest.ProtoReflect.Descriptor instead.
func (*UpdateExploitRequest) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateExploitRequest) GetState() *ExploitState {
	if x != nil {
		return x.State
	}
	return nil
}

type UpdateExploitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ExploitState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateExploitResponse) Reset() {
	*x = UpdateExploitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExploitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExploitResponse) ProtoMessage() {}

func (x *UpdateExploitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExploitResponse.ProtoReflect.Descriptor instead.
func (*UpdateExploitResponse) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateExploitResponse) GetState() *ExploitState {
	if x != nil {
		return x.State
	}
	return nil
}

type SingleRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExploitId string `protobuf:"bytes,1,opt,name=exploit_id,json=exploitId,proto3" json:"exploit_id,omitempty"`
}

func (x *SingleRunRequest) Reset() {
	*x = SingleRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRunRequest) ProtoMessage() {}

func (x *SingleRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRunRequest.ProtoReflect.Descriptor instead.
func (*SingleRunRequest) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{11}
}

func (x *SingleRunRequest) GetExploitId() string {
	if x != nil {
		return x.ExploitId
	}
	return ""
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{12}
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type PingRequest_ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *PingRequest_ServerInfo) Reset() {
	*x = PingRequest_ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest_ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest_ServerInfo) ProtoMessage() {}

func (x *PingRequest_ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest_ServerInfo.ProtoReflect.Descriptor instead.
func (*PingRequest_ServerInfo) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PingRequest_ServerInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type PingRequest_Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Weight   int32  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *PingRequest_Heartbeat) Reset() {
	*x = PingRequest_Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest_Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest_Heartbeat) ProtoMessage() {}

func (x *PingRequest_Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest_Heartbeat.ProtoReflect.Descriptor instead.
func (*PingRequest_Heartbeat) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{5, 1}
}

func (x *PingRequest_Heartbeat) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PingRequest_Heartbeat) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type PingRequest_Leave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *PingRequest_Leave) Reset() {
	*x = PingRequest_Leave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exploit_manager_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest_Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest_Leave) ProtoMessage() {}

func (x *PingRequest_Leave) ProtoReflect() protoreflect.Message {
	mi := &file_exploit_manager_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest_Leave.ProtoReflect.Descriptor instead.
func (*PingRequest_Leave) Descriptor() ([]byte, []int) {
	return file_exploit_manager_api_proto_rawDescGZIP(), []int{5, 2}
}

func (x *PingRequest_Leave) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

var File_exploit_manager_api_proto protoreflect.FileDescriptor

var file_exploit_manager_api_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x14, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x84, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3c,
	0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x36,
	0x0a, 0x09, 0x72, 0x75, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x75,
	0x6e, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x0c,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xfb, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x61, 0x72, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x61, 0x72, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61,
	0x72, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x61, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70,
	0x12, 0x38, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x22, 0xb1, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x57, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x78,
	0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x65,
	0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x6c, 0x6f, 0x69, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x5d, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x03, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x55, 0x0a, 0x11, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x10, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x40,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x1a, 0x24, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x42, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x69, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4b,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x32, 0xb3, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x12,
	0x1f, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65,
	0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x11, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x65, 0x78,
	0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x09, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x21, 0x2e, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0xac, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x42,
	0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x34, 0x74, 0x2d, 0x62, 0x75, 0x74, 0x2d,
	0x73, 0x34, 0x64, 0x2f, 0x6e, 0x65, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xca, 0x02, 0x0e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xe2, 0x02, 0x1a, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exploit_manager_api_proto_rawDescOnce sync.Once
	file_exploit_manager_api_proto_rawDescData = file_exploit_manager_api_proto_rawDesc
)

func file_exploit_manager_api_proto_rawDescGZIP() []byte {
	file_exploit_manager_api_proto_rawDescOnce.Do(func() {
		file_exploit_manager_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_exploit_manager_api_proto_rawDescData)
	})
	return file_exploit_manager_api_proto_rawDescData
}

var file_exploit_manager_api_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_exploit_manager_api_proto_goTypes = []interface{}{
	(*TeamBucket)(nil),             // 0: exploit_manager.TeamBucket
	(*ExploitConfiguration)(nil),   // 1: exploit_manager.ExploitConfiguration
	(*ExploitState)(nil),           // 2: exploit_manager.ExploitState
	(*Config)(nil),                 // 3: exploit_manager.Config
	(*ServerState)(nil),            // 4: exploit_manager.ServerState
	(*PingRequest)(nil),            // 5: exploit_manager.PingRequest
	(*PingResponse)(nil),           // 6: exploit_manager.PingResponse
	(*ExploitRequest)(nil),         // 7: exploit_manager.ExploitRequest
	(*ExploitResponse)(nil),        // 8: exploit_manager.ExploitResponse
	(*UpdateExploitRequest)(nil),   // 9: exploit_manager.UpdateExploitRequest
	(*UpdateExploitResponse)(nil),  // 10: exploit_manager.UpdateExploitResponse
	(*SingleRunRequest)(nil),       // 11: exploit_manager.SingleRunRequest
	(*Command)(nil),                // 12: exploit_manager.Command
	nil,                            // 13: exploit_manager.TeamBucket.TeamsEntry
	nil,                            // 14: exploit_manager.ServerState.ClientTeamMapEntry
	(*PingRequest_ServerInfo)(nil), // 15: exploit_manager.PingRequest.ServerInfo
	(*PingRequest_Heartbeat)(nil),  // 16: exploit_manager.PingRequest.Heartbeat
	(*PingRequest_Leave)(nil),      // 17: exploit_manager.PingRequest.Leave
	(*durationpb.Duration)(nil),    // 18: google.protobuf.Duration
	(*fileserver.FileInfo)(nil),    // 19: fileserver.FileInfo
	(*emptypb.Empty)(nil),          // 20: google.protobuf.Empty
}
var file_exploit_manager_api_proto_depIdxs = []int32{
	13, // 0: exploit_manager.TeamBucket.teams:type_name -> exploit_manager.TeamBucket.TeamsEntry
	18, // 1: exploit_manager.ExploitConfiguration.run_every:type_name -> google.protobuf.Duration
	18, // 2: exploit_manager.ExploitConfiguration.timeout:type_name -> google.protobuf.Duration
	19, // 3: exploit_manager.ExploitState.file:type_name -> fileserver.FileInfo
	1,  // 4: exploit_manager.ExploitState.config:type_name -> exploit_manager.ExploitConfiguration
	18, // 5: exploit_manager.Config.ping_every:type_name -> google.protobuf.Duration
	18, // 6: exploit_manager.Config.submit_every:type_name -> google.protobuf.Duration
	14, // 7: exploit_manager.ServerState.client_team_map:type_name -> exploit_manager.ServerState.ClientTeamMapEntry
	2,  // 8: exploit_manager.ServerState.exploits:type_name -> exploit_manager.ExploitState
	3,  // 9: exploit_manager.ServerState.config:type_name -> exploit_manager.Config
	15, // 10: exploit_manager.PingRequest.server_info_request:type_name -> exploit_manager.PingRequest.ServerInfo
	16, // 11: exploit_manager.PingRequest.heartbeat_request:type_name -> exploit_manager.PingRequest.Heartbeat
	17, // 12: exploit_manager.PingRequest.leave_request:type_name -> exploit_manager.PingRequest.Leave
	4,  // 13: exploit_manager.PingResponse.state:type_name -> exploit_manager.ServerState
	2,  // 14: exploit_manager.ExploitResponse.state:type_name -> exploit_manager.ExploitState
	2,  // 15: exploit_manager.UpdateExploitRequest.state:type_name -> exploit_manager.ExploitState
	2,  // 16: exploit_manager.UpdateExploitResponse.state:type_name -> exploit_manager.ExploitState
	0,  // 17: exploit_manager.ServerState.ClientTeamMapEntry.value:type_name -> exploit_manager.TeamBucket
	5,  // 18: exploit_manager.Service.Ping:input_type -> exploit_manager.PingRequest
	7,  // 19: exploit_manager.Service.Exploit:input_type -> exploit_manager.ExploitRequest
	9,  // 20: exploit_manager.Service.UpdateExploit:input_type -> exploit_manager.UpdateExploitRequest
	12, // 21: exploit_manager.Service.BroadcastCommand:input_type -> exploit_manager.Command
	20, // 22: exploit_manager.Service.BroadcastRequests:input_type -> google.protobuf.Empty
	11, // 23: exploit_manager.Service.SingleRun:input_type -> exploit_manager.SingleRunRequest
	20, // 24: exploit_manager.Service.SingleRunRequests:input_type -> google.protobuf.Empty
	6,  // 25: exploit_manager.Service.Ping:output_type -> exploit_manager.PingResponse
	8,  // 26: exploit_manager.Service.Exploit:output_type -> exploit_manager.ExploitResponse
	10, // 27: exploit_manager.Service.UpdateExploit:output_type -> exploit_manager.UpdateExploitResponse
	20, // 28: exploit_manager.Service.BroadcastCommand:output_type -> google.protobuf.Empty
	12, // 29: exploit_manager.Service.BroadcastRequests:output_type -> exploit_manager.Command
	20, // 30: exploit_manager.Service.SingleRun:output_type -> google.protobuf.Empty
	11, // 31: exploit_manager.Service.SingleRunRequests:output_type -> exploit_manager.SingleRunRequest
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_exploit_manager_api_proto_init() }
func file_exploit_manager_api_proto_init() {
	if File_exploit_manager_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exploit_manager_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExploitConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExploitState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExploitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExploitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExploitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExploitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest_ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest_Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exploit_manager_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest_Leave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_exploit_manager_api_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PingRequest_ServerInfoRequest)(nil),
		(*PingRequest_HeartbeatRequest)(nil),
		(*PingRequest_LeaveRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exploit_manager_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exploit_manager_api_proto_goTypes,
		DependencyIndexes: file_exploit_manager_api_proto_depIdxs,
		MessageInfos:      file_exploit_manager_api_proto_msgTypes,
	}.Build()
	File_exploit_manager_api_proto = out.File
	file_exploit_manager_api_proto_rawDesc = nil
	file_exploit_manager_api_proto_goTypes = nil
	file_exploit_manager_api_proto_depIdxs = nil
}
