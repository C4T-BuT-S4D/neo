package exploit

import (
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
	"github.com/samber/lo"
)

type Metrics struct {
	FlagsSubmitted *prometheus.CounterVec
	Teams          prometheus.Gauge
}

func NewMetrics(namespace string) *Metrics {
	const subsystem = "exploit_runner"
	targetLabels := []string{"target_id", "target_ip"}
	exploitLabels := []string{"exploit_id", "exploit_version", "exploit_type"}

	return &Metrics{
		FlagsSubmitted: promauto.NewCounterVec(
			prometheus.CounterOpts{
				Namespace: namespace,
				Subsystem: subsystem,
				Name:      "flags_submitted_total",
				Help:      "Number of exploits finished",
			},
			lo.Union(targetLabels, exploitLabels),
		),

		Teams: promauto.NewGauge(prometheus.GaugeOpts{
			Namespace: namespace,
			Subsystem: subsystem,
			Name:      "teams",
			Help:      "Number of teams scheduled for the current runner",
		}),
	}
}
