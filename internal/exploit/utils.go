package exploit

import (
	"fmt"
	"os"
	"path/filepath"

	neopb "neo/lib/genproto/neo"
	"neo/pkg/archive"
)

func saveExploit(f *os.File, outPath string, cfg *neopb.ExploitConfiguration) (string, error) {
	if cfg.GetIsArchive() {
		if err := archive.Untar(outPath, f); err != nil {
			return "", fmt.Errorf("unarchiving: %w", err)
		}
		return filepath.Join(outPath, cfg.GetEntrypoint()), nil
	}

	if err := f.Close(); err != nil {
		return "", fmt.Errorf("closing file: %w", err)
	}
	if err := os.Rename(f.Name(), outPath); err != nil {
		return "", fmt.Errorf("renaming file %s to %s: %w", f.Name(), outPath, err)
	}
	return outPath, nil
}

func prepareEntry(path string) (string, error) {
	absPath, err := filepath.Abs(path)
	if err != nil {
		return "", fmt.Errorf("taking absolute path: %w", err)
	}
	if err := os.Chmod(absPath, 0755); err != nil {
		return "", fmt.Errorf("setting permissions: %w", err)
	}
	return absPath, nil
}
