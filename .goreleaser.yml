builds:
  - id: "neo_client"
    main: "./cmd/client"
    binary: "./neo"
    env:
      - CGO_ENABLED=0
    ldflags:
      - "-s -w"
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64

archives:
  - id: "client"
    format: zip
    builds:
      - "neo_client"
    name_template: "{{ .ProjectName }}_client_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: "{{ .ProjectName }}_client_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: linux
        format: tar.gz
    files:
      - README.md
      - exploits/.keep
      - src: configs/client/config.yml
        dst: client_config.yml

  - id: "server"
    format: zip
    meta: true
    name_template: "{{ .ProjectName }}_server_{{ .Version }}"
    wrap_in_directory: "{{ .ProjectName }}_server_{{ .Version }}"
    files:
      - configs/server/config.yml
      - Makefile
      - Dockerfile
      - compose.yml
      - go.*
      - README.md
      - cmd
      - internal
      - pkg
      - monitoring
      - front

  - id: "client_env"
    format: zip
    meta: true
    name_template: "{{ .ProjectName }}_client_env_{{ .Version }}"
    wrap_in_directory: "{{ .ProjectName }}_client_env_{{ .Version }}"
    files:
      - README.md
      - src: client_env/.version
        dst: .version
      - src: client_env/start*.sh
        dst: .
      - src: client_env/vars.sh
        dst: vars.sh
      - src: client_env/requirements.txt
        dst: requirements.txt
      - src: configs/client/config.yml
        dst: client_config.yml
      - exploits/.keep

release:
  prerelease: auto
  name_template: "{{.ProjectName}}-{{.Version}}"
  extra_files:
    - glob: "./dist/other/*"

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
