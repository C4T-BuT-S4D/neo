import ExploitUpdateForm from "@/components/ExploitUpdateForm";
import { ExploitState } from "@/proto/exploits/api";
import { formatSeconds } from "@/utils/duration";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import {
  Accordion,
  AccordionDetails,
  AccordionSummary,
  Box,
  Typography,
} from "@mui/material";
import { useState } from "react";

interface P {
  exploits: ExploitState[];
  onRefresh: () => void;
}

export default function ExploitsView(props: P) {
  const [expanded, setExpanded] = useState<string | false>(false);

  const handleChange =
    (exploit: ExploitState) =>
    (_event: React.SyntheticEvent, isExpanded: boolean) => {
      setExpanded(isExpanded ? exploit.exploitId : false);
    };

  return (
    <>
      {props.exploits.map((exploit) => (
        <Accordion
          key={exploit.exploitId}
          expanded={expanded === exploit.exploitId}
          onChange={handleChange(exploit)}
        >
          <AccordionSummary expandIcon={<ExpandMoreIcon />}>
            <Typography>
              {exploit.exploitId}
              {" v"}
              {exploit.version.toString()}
              {" timeout="}
              {formatSeconds(exploit.config?.timeout?.seconds.toInt() || 0)}
              {" interval="}
              {formatSeconds(exploit.config?.runEvery?.seconds.toInt() || 0)}
            </Typography>
          </AccordionSummary>
          <AccordionDetails>
            <Box>
              <ExploitUpdateForm
                exploit={exploit}
                onRefresh={props.onRefresh}
              />
            </Box>
          </AccordionDetails>
        </Accordion>
      ))}
    </>
  );
}
